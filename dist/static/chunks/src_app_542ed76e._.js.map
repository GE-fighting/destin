{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/Home.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"buttons\": \"Home-module__jKgjFW__buttons\",\n  \"canvas\": \"Home-module__jKgjFW__canvas\",\n  \"container\": \"Home-module__jKgjFW__container\",\n  \"enterBtn\": \"Home-module__jKgjFW__enterBtn\",\n  \"fadeIn\": \"Home-module__jKgjFW__fadeIn\",\n  \"fireworksCanvas\": \"Home-module__jKgjFW__fireworksCanvas\",\n  \"musicBtn\": \"Home-module__jKgjFW__musicBtn\",\n  \"overlay\": \"Home-module__jKgjFW__overlay\",\n  \"playing\": \"Home-module__jKgjFW__playing\",\n  \"subtitle\": \"Home-module__jKgjFW__subtitle\",\n  \"title\": \"Home-module__jKgjFW__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///root/projects/destin/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport styles from './Home.module.css';\nimport { useRouter } from 'next/navigation';\n\nexport default function Home() {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const [audioLoaded, setAudioLoaded] = useState(false);\n  const [audioPlaying, setAudioPlaying] = useState(false);\n  const router = useRouter();\n\n  // 页面加载后尝试播放音乐\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (audio && audioLoaded) {\n      // 尝试自动播放\n      const playPromise = audio.play();\n      \n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          // 自动播放成功\n          setAudioPlaying(true);\n          console.log(\"Audio playing automatically\");\n        }).catch(err => {\n          // 自动播放被阻止\n          console.log(\"Audio autoplay was prevented:\", err);\n          // 不要设置audioPlaying为true，因为实际上没有播放\n        });\n      }\n    }\n  }, [audioLoaded]);\n\n  // 添加用户交互时的播放尝试\n  useEffect(() => {\n    const handleUserInteraction = () => {\n      const audio = audioRef.current;\n      if (audio && !audioPlaying && audioLoaded) {\n        audio.play().then(() => {\n          setAudioPlaying(true);\n          console.log(\"Audio playing after user interaction\");\n        }).catch(err => {\n          console.log(\"Audio play was prevented even after interaction:\", err);\n        });\n      }\n    };\n\n    // 监听可能的用户交互事件\n    document.addEventListener('click', handleUserInteraction);\n    document.addEventListener('touchstart', handleUserInteraction);\n    document.addEventListener('keydown', handleUserInteraction);\n\n    return () => {\n      document.removeEventListener('click', handleUserInteraction);\n      document.removeEventListener('touchstart', handleUserInteraction);\n      document.removeEventListener('keydown', handleUserInteraction);\n    };\n  }, [audioPlaying, audioLoaded]);\n\n  useEffect(() => {\n    // Store current canvas ref at the beginning of the effect\n    const currentCanvas = canvasRef.current;\n    \n    // 创建Three.js场景\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n    // 设置梦幻蓝色主题\n    const dreamyBlue = {\n      dark: 0x1a1a4a,\n      medium: 0x4169e1,\n      light: 0x87cefa,\n      highlight: 0xadd8e6,\n      accent: 0xb0e0e6\n    };\n\n    const scene = new THREE.Scene();\n    scene.fog = new THREE.Fog(dreamyBlue.dark, 15, 50);\n    \n    const camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 10, 20);\n    \n    // 添加环境光\n    const ambientLight = new THREE.AmbientLight(dreamyBlue.light, 0.5);\n    scene.add(ambientLight);\n    \n    // 添加方向光\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 10, 7.5);\n    scene.add(directionalLight);\n\n    // 添加一些点光源增加梦幻感\n    const pointLight1 = new THREE.PointLight(dreamyBlue.light, 1, 30);\n    pointLight1.position.set(-5, 5, -15);\n    scene.add(pointLight1);\n\n    const pointLight2 = new THREE.PointLight(dreamyBlue.highlight, 1, 30);\n    pointLight2.position.set(8, 3, -25);\n    scene.add(pointLight2);\n\n    // 创建蜿蜒的星光路径\n    // 使用曲线创建蜿蜒路径\n    const curve = new THREE.CatmullRomCurve3([\n      new THREE.Vector3(-4, 0, 10),\n      new THREE.Vector3(-2, 0, 0),\n      new THREE.Vector3(3, 0, -10),\n      new THREE.Vector3(-1, 0, -20),\n      new THREE.Vector3(2, 0, -30),\n      new THREE.Vector3(-3, 0, -40),\n      new THREE.Vector3(0, 0, -50),\n      new THREE.Vector3(4, 0, -60),\n      new THREE.Vector3(-2, 0, -70),\n      new THREE.Vector3(0, 0, -80),\n    ]);\n    \n    const points = curve.getPoints(100);\n    const pathGeometry = new THREE.BufferGeometry().setFromPoints(points);\n    \n    // 创建用于可视化路径的线\n    const pathLine = new THREE.Line(\n      pathGeometry,\n      new THREE.LineBasicMaterial({ color: dreamyBlue.accent, visible: false })\n    );\n    scene.add(pathLine);\n\n    // 创建路径的平面\n    const pathWidth = 6;\n    const extrudedCurvePoints = [];\n    \n    // 为路径创建一个具有宽度的管道\n    for (let i = 0; i < points.length; i++) {\n      const point = points[i];\n      let direction;\n      \n      if (i < points.length - 1) {\n        direction = new THREE.Vector3().subVectors(points[i + 1], point).normalize();\n      } else {\n        direction = new THREE.Vector3().subVectors(point, points[i - 1]).normalize();\n      }\n      \n      const perpendicular = new THREE.Vector3(-direction.z, 0, direction.x).normalize();\n      \n      // 路径两侧的点\n      const leftPoint = new THREE.Vector3().copy(point).add(perpendicular.clone().multiplyScalar(pathWidth / 2));\n      const rightPoint = new THREE.Vector3().copy(point).add(perpendicular.clone().multiplyScalar(-pathWidth / 2));\n      \n      extrudedCurvePoints.push({ left: leftPoint, right: rightPoint });\n    }\n    \n    // 创建用于路径的几何体\n    const roadGeometry = new THREE.BufferGeometry();\n    const roadVertices = [];\n    const roadIndices = [];\n    \n    // 添加顶点\n    for (let i = 0; i < extrudedCurvePoints.length; i++) {\n      const { left, right } = extrudedCurvePoints[i];\n      roadVertices.push(left.x, left.y, left.z);\n      roadVertices.push(right.x, right.y, right.z);\n    }\n    \n    // 添加索引 (三角形)\n    for (let i = 0; i < extrudedCurvePoints.length - 1; i++) {\n      const topLeft = i * 2;\n      const topRight = i * 2 + 1;\n      const bottomLeft = (i + 1) * 2;\n      const bottomRight = (i + 1) * 2 + 1;\n      \n      // 两个三角形组成一个四边形\n      roadIndices.push(topLeft, bottomLeft, topRight);\n      roadIndices.push(topRight, bottomLeft, bottomRight);\n    }\n    \n    roadGeometry.setAttribute('position', new THREE.Float32BufferAttribute(roadVertices, 3));\n    roadGeometry.setIndex(roadIndices);\n    roadGeometry.computeVertexNormals();\n    \n    const roadMaterial = new THREE.MeshStandardMaterial({\n      color: dreamyBlue.medium,\n      metalness: 0.3,\n      roughness: 0.4,\n      side: THREE.DoubleSide,\n      emissive: dreamyBlue.medium,\n      emissiveIntensity: 0.2,\n    });\n    \n    const road = new THREE.Mesh(roadGeometry, roadMaterial);\n    scene.add(road);\n\n    // 添加星光粒子 - 增加数量\n    const starsGeometry = new THREE.BufferGeometry();\n    const starsCount = 5000; // 增加到5000个\n    const starPositions = new Float32Array(starsCount * 3);\n    const sizes = new Float32Array(starsCount);\n    const starColors = new Float32Array(starsCount * 3);\n\n    for (let i = 0; i < starsCount * 3; i += 3) {\n      // 使粒子散布在场景中，更多集中在路径附近\n      const randomPointIndex = Math.floor(Math.random() * points.length);\n      const pathPoint = points[randomPointIndex];\n      \n      // 路径附近的粒子\n      if (Math.random() < 0.4) {\n        // 靠近路径的粒子\n        starPositions[i] = pathPoint.x + (Math.random() - 0.5) * 15;\n        starPositions[i + 1] = Math.random() * 8;\n        starPositions[i + 2] = pathPoint.z + (Math.random() - 0.5) * 8;\n      } else if (Math.random() < 0.7) {\n        // 中距离的粒子\n        starPositions[i] = (Math.random() - 0.5) * 60;\n        starPositions[i + 1] = Math.random() * 20;\n        starPositions[i + 2] = (Math.random() - 0.5) * 120 - 20;\n      } else {\n        // 远距离的粒子，创造深度\n        starPositions[i] = (Math.random() - 0.5) * 100;\n        starPositions[i + 1] = Math.random() * 50;\n        starPositions[i + 2] = (Math.random() - 0.5) * 200 - 50;\n      }\n      \n      // 粒子大小变化更大\n      sizes[i / 3] = Math.random() * 2;\n      \n      // 添加颜色变化\n      if (Math.random() > 0.8) {\n        // 一些粒子使用强调色\n        starColors[i] = 1; // R\n        starColors[i + 1] = 1; // G\n        starColors[i + 2] = Math.random() * 0.5 + 0.5; // B - 偏蓝色\n      } else {\n        // 大多数使用普通的蓝白色\n        starColors[i] = Math.random() * 0.3 + 0.7; // R\n        starColors[i + 1] = Math.random() * 0.3 + 0.7; // G\n        starColors[i + 2] = 1; // B\n      }\n    }\n\n    starsGeometry.setAttribute('position', new THREE.BufferAttribute(starPositions, 3));\n    starsGeometry.setAttribute('size', new THREE.BufferAttribute(sizes, 1));\n    starsGeometry.setAttribute('color', new THREE.BufferAttribute(starColors, 3));\n\n    const starsMaterial = new THREE.PointsMaterial({\n      size: 0.1,\n      color: dreamyBlue.highlight,\n      transparent: true,\n      opacity: 0.8,\n      blending: THREE.AdditiveBlending,\n      vertexColors: true\n    });\n\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\n    scene.add(stars);\n\n    // 创建花草，使用梦幻蓝色主题\n    const createFlower = (x: number, z: number, type: string = 'regular') => {\n      const group = new THREE.Group();\n      \n      if (type === 'sunflower') {\n        // 向日葵实现\n        // 茎\n        const stemGeometry = new THREE.CylinderGeometry(0.08, 0.05, 2, 8);\n        const stemMaterial = new THREE.MeshStandardMaterial({ color: 0x2e8b57 });\n        const stem = new THREE.Mesh(stemGeometry, stemMaterial);\n        stem.position.y = 1;\n        group.add(stem);\n        \n        // 叶子\n        const leafGeometry = new THREE.SphereGeometry(0.3, 8, 8);\n        leafGeometry.scale(1, 0.3, 1);\n        const leafMaterial = new THREE.MeshStandardMaterial({ color: 0x3cb371 });\n        \n        for (let i = 0; i < 2; i++) {\n          const leaf = new THREE.Mesh(leafGeometry, leafMaterial);\n          leaf.position.set(0.3 * (i === 0 ? 1 : -1), 0.8 + Math.random() * 0.5, 0);\n          leaf.rotation.z = Math.PI / 6 * (i === 0 ? 1 : -1);\n          group.add(leaf);\n        }\n        \n        // 花盘\n        const centerGeometry = new THREE.CircleGeometry(0.5, 32);\n        const centerMaterial = new THREE.MeshStandardMaterial({ \n          color: 0x654321,\n          side: THREE.DoubleSide\n        });\n        const center = new THREE.Mesh(centerGeometry, centerMaterial);\n        center.position.y = 2;\n        center.rotation.x = -Math.PI / 2;\n        group.add(center);\n        \n        // 花瓣\n        const petalGeometry = new THREE.SphereGeometry(0.25, 8, 8);\n        petalGeometry.scale(1, 0.2, 0.5);\n        const petalMaterial = new THREE.MeshStandardMaterial({ color: 0xffd700 });\n        \n        const petalCount = 16;\n        for (let i = 0; i < petalCount; i++) {\n          const angle = (i / petalCount) * Math.PI * 2;\n          const petal = new THREE.Mesh(petalGeometry, petalMaterial);\n          \n          petal.position.set(\n            Math.cos(angle) * 0.7,\n            2,\n            Math.sin(angle) * 0.7\n          );\n          \n          petal.rotation.x = Math.PI / 2;\n          petal.rotation.y = -angle;\n          \n          group.add(petal);\n        }\n      } else {\n        // 普通花的实现 - 已有代码\n        // 茎\n        const stemGeometry = new THREE.CylinderGeometry(0.05, 0.05, 1, 8);\n        const stemMaterial = new THREE.MeshStandardMaterial({ color: 0x4caf50 });\n        const stem = new THREE.Mesh(stemGeometry, stemMaterial);\n        stem.position.y = 0.5;\n        group.add(stem);\n        \n        // 花瓣 - 使用蓝色调\n        const petalGeometry = new THREE.SphereGeometry(0.2, 8, 8);\n        const petalColor = new THREE.Color().setHSL(0.6 + Math.random() * 0.2, 0.7, 0.7); // 蓝色色调\n        const petalMaterial = new THREE.MeshStandardMaterial({ color: petalColor });\n        \n        for (let i = 0; i < 5; i++) {\n          const petal = new THREE.Mesh(petalGeometry, petalMaterial);\n          const angle = (i / 5) * Math.PI * 2;\n          petal.position.set(\n            Math.cos(angle) * 0.2,\n            1 + Math.sin(angle) * 0.05,\n            Math.sin(angle) * 0.2\n          );\n          petal.scale.set(0.7, 0.7, 0.7);\n          group.add(petal);\n        }\n        \n        // 花芯\n        const centerGeometry = new THREE.SphereGeometry(0.1, 8, 8);\n        const centerMaterial = new THREE.MeshStandardMaterial({ color: 0xffeb3b });\n        const center = new THREE.Mesh(centerGeometry, centerMaterial);\n        center.position.y = 1;\n        group.add(center);\n      }\n      \n      group.position.set(x, 0, z);\n      return group;\n    };\n\n    // 添加更多花草到场景，包括向日葵\n    for (let i = 0; i < 50; i++) {\n      // 选择随机点\n      const randomPointIndex = Math.floor(Math.random() * points.length);\n      const pathPoint = points[randomPointIndex];\n      \n      if (!pathPoint) continue;\n      \n      // 确保花不在路径上，偏移到路径两侧\n      const offset = (Math.random() > 0.5 ? 1 : -1) * (pathWidth / 2 + 2 + Math.random() * 8);\n      const perpendicular = new THREE.Vector3(-pathPoint.z, 0, pathPoint.x).normalize();\n      \n      const flowerPos = new THREE.Vector3().copy(pathPoint).add(\n        perpendicular.clone().multiplyScalar(offset)\n      );\n      \n      // 有20%的几率是向日葵\n      const flowerType = Math.random() > 0.8 ? 'sunflower' : 'regular';\n      const flower = createFlower(flowerPos.x, flowerPos.z, flowerType);\n      scene.add(flower);\n    }\n    \n    // 创建蝴蝶\n    const createButterfly = (x: number, z: number) => {\n      const group = new THREE.Group();\n      \n      // 身体\n      const bodyGeometry = new THREE.CapsuleGeometry(0.05, 0.2, 8, 8);\n      const bodyMaterial = new THREE.MeshStandardMaterial({ color: 0x000000 });\n      const body = new THREE.Mesh(bodyGeometry, bodyMaterial);\n      body.rotation.x = Math.PI / 2;\n      group.add(body);\n      \n      // 翅膀\n      const wingShape = new THREE.Shape();\n      wingShape.moveTo(0, 0);\n      wingShape.quadraticCurveTo(0.3, 0.2, 0.5, 0);\n      wingShape.quadraticCurveTo(0.3, -0.2, 0, 0);\n      \n      const wingGeometry = new THREE.ShapeGeometry(wingShape);\n      const wingMaterial = new THREE.MeshStandardMaterial({ \n        color: new THREE.Color(Math.random() * 0.2 + 0.8, Math.random() * 0.2 + 0.8, 1), \n        side: THREE.DoubleSide,\n        transparent: true,\n        opacity: 0.7\n      });\n      \n      const leftWing = new THREE.Mesh(wingGeometry, wingMaterial);\n      leftWing.position.set(0, 0, 0.05);\n      group.add(leftWing);\n      \n      const rightWing = new THREE.Mesh(wingGeometry, wingMaterial);\n      rightWing.rotation.y = Math.PI;\n      rightWing.position.set(0, 0, -0.05);\n      group.add(rightWing);\n      \n      group.position.set(x, 1.5 + Math.random(), z);\n      return group;\n    };\n    \n    // 添加蝴蝶\n    const butterflies: THREE.Group[] = [];\n    for (let i = 0; i < 15; i++) {\n      try {\n        const randomPointIndex = Math.floor(Math.random() * points.length);\n        const pathPoint = points[randomPointIndex];\n        \n        if (!pathPoint) continue;\n        \n        const offset = (Math.random() - 0.5) * 20;\n        const butterfly = createButterfly(\n          pathPoint.x + offset, \n          pathPoint.z + offset\n        );\n        scene.add(butterfly);\n        butterflies.push(butterfly);\n      } catch (e) {\n        console.error(\"Error creating butterfly:\", e);\n      }\n    }\n    \n    // 创建兔子\n    const createRabbit = (x: number, z: number) => {\n      const group = new THREE.Group();\n      \n      // 身体\n      const bodyGeometry = new THREE.SphereGeometry(0.3, 16, 16);\n      bodyGeometry.scale(1, 0.8, 1.2);\n      const bodyMaterial = new THREE.MeshStandardMaterial({ color: 0xf5f5f5 });\n      const body = new THREE.Mesh(bodyGeometry, bodyMaterial);\n      body.position.y = 0.3;\n      group.add(body);\n      \n      // 头部\n      const headGeometry = new THREE.SphereGeometry(0.2, 16, 16);\n      const headMaterial = new THREE.MeshStandardMaterial({ color: 0xf5f5f5 });\n      const head = new THREE.Mesh(headGeometry, headMaterial);\n      head.position.set(0.25, 0.5, 0);\n      group.add(head);\n      \n      // 耳朵\n      const earGeometry = new THREE.CapsuleGeometry(0.05, 0.3, 8, 8);\n      const earMaterial = new THREE.MeshStandardMaterial({ color: 0xf5f5f5 });\n      \n      const leftEar = new THREE.Mesh(earGeometry, earMaterial);\n      leftEar.position.set(0.25, 0.7, 0.1);\n      leftEar.rotation.x = -Math.PI / 12;\n      leftEar.rotation.z = -Math.PI / 8;\n      group.add(leftEar);\n      \n      const rightEar = new THREE.Mesh(earGeometry, earMaterial);\n      rightEar.position.set(0.25, 0.7, -0.1);\n      rightEar.rotation.x = Math.PI / 12;\n      rightEar.rotation.z = -Math.PI / 8;\n      group.add(rightEar);\n      \n      // 腿\n      const legGeometry = new THREE.SphereGeometry(0.1, 8, 8);\n      legGeometry.scale(1, 0.6, 1);\n      const legMaterial = new THREE.MeshStandardMaterial({ color: 0xf0f0f0 });\n      \n      // 前腿\n      const frontLegPositions = [\n        [0.1, 0, 0.15],\n        [0.1, 0, -0.15]\n      ];\n      \n      frontLegPositions.forEach(pos => {\n        const leg = new THREE.Mesh(legGeometry, legMaterial);\n        leg.position.set(pos[0], pos[1], pos[2]);\n        group.add(leg);\n      });\n      \n      // 后腿\n      const hindLegGeometry = new THREE.SphereGeometry(0.12, 8, 8);\n      hindLegGeometry.scale(1, 0.7, 1);\n      \n      const hindLegPositions = [\n        [-0.2, 0, 0.15],\n        [-0.2, 0, -0.15]\n      ];\n      \n      hindLegPositions.forEach(pos => {\n        const leg = new THREE.Mesh(hindLegGeometry, legMaterial);\n        leg.position.set(pos[0], pos[1], pos[2]);\n        group.add(leg);\n      });\n      \n      // 尾巴\n      const tailGeometry = new THREE.SphereGeometry(0.1, 8, 8);\n      const tailMaterial = new THREE.MeshStandardMaterial({ color: 0xffffff });\n      const tail = new THREE.Mesh(tailGeometry, tailMaterial);\n      tail.position.set(-0.35, 0.3, 0);\n      group.add(tail);\n      \n      group.position.set(x, 0, z);\n      return group;\n    };\n    \n    // 添加一些兔子\n    const rabbits: THREE.Group[] = [];\n    for (let i = 0; i < 5; i++) {\n      try {\n        // 在安全位置上添加兔子\n        const safePointIndex = Math.floor((points.length / 5) * i + points.length / 10);\n        if (safePointIndex >= points.length) continue;\n        \n        const pathPoint = points[safePointIndex];\n        if (!pathPoint) continue;\n        \n        // 偏移到路径一侧\n        const offset = (i % 2 === 0 ? 1 : -1) * (pathWidth + 4);\n        const perpendicular = new THREE.Vector3(-pathPoint.z, 0, pathPoint.x).normalize();\n        \n        const rabbitPos = new THREE.Vector3().copy(pathPoint).add(\n          perpendicular.clone().multiplyScalar(offset)\n        );\n        \n        const rabbit = createRabbit(rabbitPos.x, rabbitPos.z);\n        scene.add(rabbit);\n        rabbits.push(rabbit);\n      } catch (e) {\n        console.error(\"Error creating rabbit:\", e);\n      }\n    }\n\n    // 创建小鹿，使用更适合梦幻蓝色主题的颜色\n    const createDeer = (x: number, z: number) => {\n      const group = new THREE.Group();\n      \n      // 身体 - 使用更冷的棕色调\n      const bodyGeometry = new THREE.CapsuleGeometry(0.5, 1, 4, 8);\n      const bodyMaterial = new THREE.MeshStandardMaterial({ color: 0x8a7f8d });\n      const body = new THREE.Mesh(bodyGeometry, bodyMaterial);\n      body.rotation.z = Math.PI / 2;\n      group.add(body);\n      \n      // 头部\n      const headGeometry = new THREE.SphereGeometry(0.3, 8, 8);\n      const headMaterial = new THREE.MeshStandardMaterial({ color: 0x9e9e9e });\n      const head = new THREE.Mesh(headGeometry, headMaterial);\n      head.position.set(0.8, 0.5, 0);\n      group.add(head);\n      \n      // 鹿角 - 使用蓝色调\n      const antlerMaterial = new THREE.MeshStandardMaterial({ color: dreamyBlue.light });\n      \n      const antler1Geometry = new THREE.CylinderGeometry(0.03, 0.03, 0.5, 8);\n      const antler1 = new THREE.Mesh(antler1Geometry, antlerMaterial);\n      antler1.position.set(0.8, 0.8, 0.15);\n      antler1.rotation.z = -Math.PI / 4;\n      group.add(antler1);\n      \n      const antler2Geometry = new THREE.CylinderGeometry(0.03, 0.03, 0.5, 8);\n      const antler2 = new THREE.Mesh(antler2Geometry, antlerMaterial);\n      antler2.position.set(0.8, 0.8, -0.15);\n      antler2.rotation.z = -Math.PI / 4;\n      group.add(antler2);\n      \n      // 腿\n      const legGeometry = new THREE.CylinderGeometry(0.1, 0.05, 1, 8);\n      const legMaterial = new THREE.MeshStandardMaterial({ color: 0x9e9e9e });\n      \n      const positions = [\n        [-0.3, -0.5, 0.3],\n        [-0.3, -0.5, -0.3],\n        [0.3, -0.5, 0.3],\n        [0.3, -0.5, -0.3]\n      ];\n      \n      positions.forEach(pos => {\n        const leg = new THREE.Mesh(legGeometry, legMaterial);\n        leg.position.set(pos[0], pos[1], pos[2]);\n        group.add(leg);\n      });\n      \n      group.position.set(x, 1, z);\n      group.scale.set(0.7, 0.7, 0.7);\n      return group;\n    };\n\n    // 创建几只小鹿到场景，确保它们在路径两侧\n    const deers: THREE.Group[] = [];\n    for (let i = 0; i < 3; i++) {\n      try {\n        // 使用固定点而不是随机点，确保我们选择的点是有效的\n        const safePointIndex = Math.floor((points.length / 3) * (i + 1)); // 在路径上均匀分布\n        const pathPoint = points[safePointIndex];\n        \n        if (!pathPoint) continue; // 安全检查\n        \n        // 简化小鹿位置的计算逻辑，避免复杂的向量计算\n        // 直接在X方向上偏移\n        const offsetX = (i % 2 === 0 ? 1 : -1) * (pathWidth + 6);\n        const deerPos = new THREE.Vector3(\n          pathPoint.x + offsetX,\n          1, // 设置y为1，确保小鹿站在地面上\n          pathPoint.z\n        );\n        \n        const deer = createDeer(deerPos.x, deerPos.z);\n        scene.add(deer);\n        deers.push(deer);\n      } catch (e) {\n        console.error(\"Error placing deer:\", e);\n      }\n    }\n\n    // 创建福州景点，包含山和海\n    const createFuzhouScene = () => {\n      const group = new THREE.Group();\n      \n      // 创建基座\n      const baseGeometry = new THREE.CylinderGeometry(5, 5, 0.5, 16);\n      const baseMaterial = new THREE.MeshStandardMaterial({ color: 0x8a7f8d });\n      const base = new THREE.Mesh(baseGeometry, baseMaterial);\n      base.position.y = 0.25;\n      group.add(base);\n      \n      // 创建山\n      const createMountain = (x: number, z: number, height: number, radius: number, color: number) => {\n        const mountainGeometry = new THREE.ConeGeometry(radius, height, 16);\n        const mountainMaterial = new THREE.MeshStandardMaterial({ \n          color,\n          roughness: 0.8\n        });\n        const mountain = new THREE.Mesh(mountainGeometry, mountainMaterial);\n        mountain.position.set(x, height / 2 + 0.5, z);\n        return mountain;\n      };\n      \n      // 添加几座山\n      const mountain1 = createMountain(-1.5, -1, 3, 1.2, 0x4b6455);\n      const mountain2 = createMountain(0, -1.5, 2.5, 1, 0x3a5045);\n      const mountain3 = createMountain(1.5, -0.8, 2, 0.8, 0x567d6e);\n      \n      group.add(mountain1, mountain2, mountain3);\n      \n      // 创建海\n      const seaGeometry = new THREE.CylinderGeometry(3, 3, 0.2, 32);\n      const seaMaterial = new THREE.MeshStandardMaterial({\n        color: dreamyBlue.light,\n        transparent: true,\n        opacity: 0.8,\n        metalness: 0.2,\n        roughness: 0.1\n      });\n      const sea = new THREE.Mesh(seaGeometry, seaMaterial);\n      sea.position.set(0, 0.6, 1.5);\n      group.add(sea);\n      \n      // 添加波浪效果\n      const waveGeometry = new THREE.PlaneGeometry(6, 2.5, 32, 8);\n      const waveMaterial = new THREE.MeshStandardMaterial({\n        color: dreamyBlue.medium,\n        transparent: true,\n        opacity: 0.5,\n        side: THREE.DoubleSide\n      });\n      \n      const wave = new THREE.Mesh(waveGeometry, waveMaterial);\n      wave.rotation.x = -Math.PI / 2;\n      wave.position.set(0, 0.7, 1.5);\n      \n      // 扭曲顶点制造波浪效果\n      const wavePositions = wave.geometry.attributes.position.array as Float32Array;\n      for (let i = 0; i < wavePositions.length; i += 3) {\n        const x = wavePositions[i];\n        const z = wavePositions[i + 2];\n        wavePositions[i + 1] = Math.sin(x * 2 + z) * 0.1;\n      }\n      wave.geometry.attributes.position.needsUpdate = true;\n      group.add(wave);\n      \n      // 移除原来的\"福州\"文字，保留景点的山海元素\n      // 缩小整个场景以使其适合放置在路径旁边\n      group.scale.set(0.4, 0.4, 0.4);\n      \n      return group;\n    };\n    \n    // 在路径五分之一处放置福州景点\n    const fuzhouScenePointIndex = Math.floor(points.length / 5);\n    const fuzhouPathPoint = points[fuzhouScenePointIndex];\n    \n    if (fuzhouPathPoint) {\n      // 放在路径右侧，距离更近\n      const offset = pathWidth + 1.5; // 减少偏移量，更靠近路径\n      const perpendicular = new THREE.Vector3(-fuzhouPathPoint.z, 0, fuzhouPathPoint.x).normalize();\n      \n      const fuzhouPos = new THREE.Vector3().copy(fuzhouPathPoint).add(\n        perpendicular.clone().multiplyScalar(offset)\n      );\n      \n      const fuzhouScene = createFuzhouScene();\n      fuzhouScene.position.set(fuzhouPos.x, 0, fuzhouPos.z);\n      \n      // 增大景点尺寸\n      fuzhouScene.scale.set(0.6, 0.6, 0.6); // 增大缩放比例，从0.4增加到0.6\n      \n      // 旋转场景使其面向路径\n      const directionToPath = new THREE.Vector3()\n        .subVectors(fuzhouPathPoint, fuzhouPos)\n        .normalize();\n      fuzhouScene.rotation.y = Math.atan2(directionToPath.x, directionToPath.z);\n      \n      scene.add(fuzhouScene);\n      \n      // 使用简单的几何体直接创建\"福州\"文字，确保可见\n      const createTextMesh = (text: string, height: number, size: number, color: number) => {\n        const group = new THREE.Group();\n        \n        // 创建直接可见的背景板\n        const backPlate = new THREE.Mesh(\n          new THREE.BoxGeometry(4, 1.5, 0.1),\n          new THREE.MeshStandardMaterial({ \n            color: dreamyBlue.dark,\n            metalness: 0.5,\n            roughness: 0.3\n          })\n        );\n        group.add(backPlate);\n        \n        // 为\"福\"字创建几何形状\n        const fu = new THREE.Group();\n        \n        // 横\n        fu.add(new THREE.Mesh(\n          new THREE.BoxGeometry(1.2, 0.2, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        ));\n        \n        // 竖\n        const vertical = new THREE.Mesh(\n          new THREE.BoxGeometry(0.2, 1.0, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        vertical.position.y = -0.4;\n        fu.add(vertical);\n        \n        // 左边的部分\n        const leftPart = new THREE.Mesh(\n          new THREE.BoxGeometry(0.2, 0.6, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        leftPart.position.set(-0.5, -0.2, 0);\n        fu.add(leftPart);\n        \n        // 右边的横\n        const rightHorizontal = new THREE.Mesh(\n          new THREE.BoxGeometry(0.5, 0.2, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        rightHorizontal.position.set(0.35, -0.3, 0);\n        fu.add(rightHorizontal);\n        \n        fu.position.set(-1.0, 0, 0.1);\n        group.add(fu);\n        \n        // 为\"州\"字创建几何形状\n        const zhou = new THREE.Group();\n        \n        // 外框\n        const frame = new THREE.Mesh(\n          new THREE.BoxGeometry(1.0, 1.0, 0.1),\n          new THREE.MeshStandardMaterial({ color, wireframe: true })\n        );\n        zhou.add(frame);\n        \n        // 内部结构\n        const inner1 = new THREE.Mesh(\n          new THREE.BoxGeometry(0.8, 0.2, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        inner1.position.y = 0.3;\n        zhou.add(inner1);\n        \n        const inner2 = new THREE.Mesh(\n          new THREE.BoxGeometry(0.8, 0.2, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        inner2.position.y = 0;\n        zhou.add(inner2);\n        \n        const inner3 = new THREE.Mesh(\n          new THREE.BoxGeometry(0.8, 0.2, 0.3),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        inner3.position.y = -0.3;\n        zhou.add(inner3);\n        \n        zhou.position.set(1.0, 0, 0.1);\n        group.add(zhou);\n        \n        // 英文 Fuzhou\n        const textMesh = new THREE.Mesh(\n          new THREE.BoxGeometry(3, 0.3, 0.2),\n          new THREE.MeshStandardMaterial({ color })\n        );\n        textMesh.position.set(0, -0.6, 0.1);\n        group.add(textMesh);\n        \n        group.position.set(0, height, 0);\n        group.scale.set(size, size, size);\n        \n        return group;\n      };\n      \n      // 创建简单的文字标志，确保在场景中清晰可见\n      const textMesh = createTextMesh('福州', 6.0, 1.5, 0xffff00); // 使用黄色并增大尺寸为1.5\n      textMesh.position.set(fuzhouPos.x, 6.0, fuzhouPos.z);\n      textMesh.rotation.copy(fuzhouScene.rotation);\n      textMesh.rotation.x = -Math.PI / 6; // 更明显的倾斜角度\n      \n      // 添加边缘高光\n      const glowMesh = new THREE.Mesh(\n        new THREE.BoxGeometry(6.5, 3, 0.05),\n        new THREE.MeshBasicMaterial({\n          color: 0x00ffff,\n          transparent: true,\n          opacity: 0.3\n        })\n      );\n      glowMesh.position.copy(textMesh.position);\n      glowMesh.position.z -= 0.1;\n      glowMesh.rotation.copy(textMesh.rotation);\n      \n      scene.add(textMesh, glowMesh);\n      \n      // 添加强光照射文字\n      const textLight = new THREE.PointLight(0xffffff, 8, 15);\n      textLight.position.set(fuzhouPos.x, 8, fuzhouPos.z - 3);\n      scene.add(textLight);\n      \n      // 连接景点和标志的支柱\n      const pillar = new THREE.Mesh(\n        new THREE.CylinderGeometry(0.15, 0.15, 6, 8),\n        new THREE.MeshStandardMaterial({ \n          color: dreamyBlue.light,\n          metalness: 0.7,\n          roughness: 0.3\n        })\n      );\n      pillar.position.set(fuzhouPos.x, 3, fuzhouPos.z);\n      scene.add(pillar);\n      \n      // 添加文字动画\n      const animateText = (elapsedTime: number) => {\n        // 上下浮动\n        textMesh.position.y = 6.0 + Math.sin(elapsedTime * 0.5) * 0.2;\n        \n        // 光照强度变化\n        textLight.intensity = 8 + Math.sin(elapsedTime * 0.7) * 2;\n        \n        // 轻微旋转\n        textMesh.rotation.z = Math.sin(elapsedTime * 0.3) * 0.05;\n      };\n      \n      // 添加到动画循环\n      const textAnimations = scene.userData.animateFunctions || [];\n      textAnimations.push(animateText);\n      scene.userData.animateFunctions = textAnimations;\n    }\n\n    // 创建人物剪影，使用梦幻蓝色调\n    const createSilhouette = (color: number) => {\n      const group = new THREE.Group();\n      \n      // 头部\n      const headGeometry = new THREE.SphereGeometry(0.2, 8, 8);\n      const material = new THREE.MeshBasicMaterial({ \n        color, \n        transparent: true, \n        opacity: 0.6 \n      });\n      const head = new THREE.Mesh(headGeometry, material);\n      head.position.y = 1.6;\n      group.add(head);\n      \n      // 身体\n      const bodyGeometry = new THREE.CapsuleGeometry(0.15, 1, 4, 8);\n      const body = new THREE.Mesh(bodyGeometry, material);\n      body.position.y = 1;\n      group.add(body);\n      \n      // 腿\n      const legGeometry = new THREE.CapsuleGeometry(0.1, 0.8, 4, 8);\n      \n      const leftLeg = new THREE.Mesh(legGeometry, material);\n      leftLeg.position.set(-0.1, 0.4, 0);\n      group.add(leftLeg);\n      \n      const rightLeg = new THREE.Mesh(legGeometry, material);\n      rightLeg.position.set(0.1, 0.4, 0);\n      group.add(rightLeg);\n      \n      // 手臂\n      const armGeometry = new THREE.CapsuleGeometry(0.08, 0.7, 4, 8);\n      \n      const leftArm = new THREE.Mesh(armGeometry, material);\n      leftArm.position.set(-0.25, 1.1, 0);\n      leftArm.rotation.z = Math.PI / 12;\n      group.add(leftArm);\n      \n      const rightArm = new THREE.Mesh(armGeometry, material);\n      rightArm.position.set(0.25, 1.1, 0);\n      rightArm.rotation.z = -Math.PI / 12;\n      group.add(rightArm);\n      \n      return group;\n    };\n\n    // 创建两个人物剪影，使用梦幻蓝色主题\n    const person1 = createSilhouette(0xd4bbff); // 浅紫色\n    const person2 = createSilhouette(0x87cefa); // 浅蓝色\n    \n    // 设置初始位置在路径起点\n    const personStartPoint = points[0];\n    person1.position.set(personStartPoint.x - 0.5, 0, personStartPoint.z);\n    person2.position.set(personStartPoint.x + 0.5, 0, personStartPoint.z);\n    \n    scene.add(person1, person2);\n\n    // 动画帧\n    const clock = new THREE.Clock();\n    let previousTime = 0;\n    \n    // 人物沿着路径移动\n    let personPathProgress = 0;\n    const pathSpeed = 0.00001; // 路径行走速度，从0.00005进一步减慢到0.00001\n    \n    // 添加对话气泡相关变量\n    let showDialog = false;\n    let dialogTimer = 0;\n    const dialogDuration = 5; // 对话显示5秒\n    \n    // 创建对话气泡\n    const dialogGroup = new THREE.Group();\n    \n    // 创建气泡背景 - Instagram风格\n    const bubbleGeometry = new THREE.PlaneGeometry(6, 3); // 保持大尺寸\n    const bubbleTexture = new THREE.CanvasTexture(createDialogBubble(\"福州，我们来了~\"));\n    const bubbleMaterial = new THREE.MeshBasicMaterial({\n      map: bubbleTexture,\n      transparent: true,\n      depthWrite: false,\n      opacity: 0.95\n    });\n    const bubble = new THREE.Mesh(bubbleGeometry, bubbleMaterial);\n    bubble.position.set(0, 3, 0);\n    dialogGroup.add(bubble);\n    dialogGroup.visible = false; // 初始不可见\n    scene.add(dialogGroup);\n    \n    // 创建Instagram风格的对话气泡纹理\n    function createDialogBubble(text: string): HTMLCanvasElement {\n      const canvas = document.createElement('canvas');\n      canvas.width = 1024;\n      canvas.height = 512;\n      const context = canvas.getContext('2d');\n      \n      if (!context) return canvas;\n      \n      // 创建Instagram风格的渐变背景\n      const gradient = context.createLinearGradient(0, 0, canvas.width, canvas.height);\n      gradient.addColorStop(0, '#8a2387'); // Instagram紫色\n      gradient.addColorStop(0.5, '#e94057'); // Instagram粉红色\n      gradient.addColorStop(1, '#f27121'); // Instagram橙色\n      \n      // 绘制圆角矩形背景 - Instagram风格\n      context.fillStyle = gradient;\n      roundRect(context, 20, 20, canvas.width - 40, canvas.height - 40, 40, true);\n      \n      // 添加内部白色背景提高可读性\n      context.fillStyle = 'rgba(255, 255, 255, 0.85)';\n      roundRect(context, 40, 40, canvas.width - 80, canvas.height - 80, 30, true);\n      \n      // 绘制文字\n      context.fillStyle = '#000000';\n      context.font = 'bold 96px \"Microsoft YaHei\", \"SimHei\", sans-serif';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      \n      // 添加文字阴影\n      context.shadowColor = 'rgba(0, 0, 0, 0.3)';\n      context.shadowBlur = 5;\n      context.shadowOffsetX = 2;\n      context.shadowOffsetY = 2;\n      \n      context.fillText(text, canvas.width / 2, canvas.height / 2);\n      \n      // 添加Instagram风格的装饰点\n      context.shadowColor = 'transparent'; // 关闭阴影\n      // 绘制Instagram标志性的彩色圆点\n      const colors = ['#8a2387', '#e94057', '#f27121']; // Instagram渐变颜色\n      \n      for (let i = 0; i < colors.length; i++) {\n        context.fillStyle = colors[i];\n        context.beginPath();\n        context.arc(\n          canvas.width - 80 + (i * 25), \n          80 - (i * 5), \n          15, 0, Math.PI * 2\n        );\n        context.fill();\n      }\n      \n      return canvas;\n    }\n    \n    // 辅助函数：绘制圆角矩形\n    function roundRect(\n      ctx: CanvasRenderingContext2D,\n      x: number, y: number,\n      width: number, height: number,\n      radius: number = 5,\n      fill: boolean = false,\n      stroke: boolean = false\n    ) {\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.arcTo(x + width, y, x + width, y + radius, radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.arcTo(x + width, y + height, x + width - radius, y + height, radius);\n      ctx.lineTo(x + radius, y + height);\n      ctx.arcTo(x, y + height, x, y + height - radius, radius);\n      ctx.lineTo(x, y + radius);\n      ctx.arcTo(x, y, x + radius, y, radius);\n      ctx.closePath();\n      if (fill) {\n        ctx.fill();\n      }\n      if (stroke) {\n        ctx.stroke();\n      }\n    }\n    \n    const animate = () => {\n      const elapsedTime = clock.getElapsedTime();\n      const deltaTime = elapsedTime - previousTime;\n      previousTime = elapsedTime;\n      \n      // 动画星光\n      const positions = stars.geometry.attributes.position.array as Float32Array;\n      for (let i = 0; i < positions.length; i += 3) {\n        positions[i + 1] += Math.sin(elapsedTime + positions[i] * 0.5) * 0.002;\n      }\n      stars.geometry.attributes.position.needsUpdate = true;\n      \n      // 检查是否到达福州景点\n      const fuzhouReached = personPathProgress > fuzhouScenePointIndex / points.length - 0.01 &&\n                          personPathProgress < fuzhouScenePointIndex / points.length + 0.01;\n      \n      // 人物沿路径移动 - 在福州景点位置停下\n      if (!fuzhouReached) {\n        personPathProgress += pathSpeed * deltaTime * 1000;\n        if (personPathProgress > 1) {\n          personPathProgress = 0;\n        }\n      } else if (!showDialog) {\n        // 到达福州景点并且还没显示过对话\n        showDialog = true;\n        dialogGroup.visible = true;\n        \n        // 放置对话气泡在人物右上方\n        const dialogPos = new THREE.Vector3(\n          person1.position.x + (person2.position.x - person1.position.x) / 2,\n          0,\n          person1.position.z + (person2.position.z - person1.position.z) / 2\n        );\n        \n        // 计算人物朝向的右上方位置\n        const tangent = curve.getTangentAt(personPathProgress);\n        const right = new THREE.Vector3(-tangent.z, 0, tangent.x).normalize().multiplyScalar(3);\n        \n        dialogGroup.position.copy(dialogPos);\n        // 向右上方偏移\n        dialogGroup.position.add(right);\n        dialogGroup.position.y = 4.5; // 位置上移\n        \n        // 气泡出现动画\n        dialogGroup.scale.set(0.1, 0.1, 0.1);\n        const targetScale = 1.3; // 最终缩放比例\n        scene.userData.animateFunctions = scene.userData.animateFunctions || [];\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        scene.userData.animateFunctions.push((_time: number) => {\n          if (dialogGroup.scale.x < targetScale) {\n            dialogGroup.scale.x += 0.05;\n            dialogGroup.scale.y += 0.05;\n            dialogGroup.scale.z += 0.05;\n          }\n        });\n        \n        // 气泡轻微摆动动画\n        scene.userData.animateFunctions.push((time: number) => {\n          if (dialogGroup.visible) {\n            dialogGroup.rotation.z = Math.sin(time * 0.5) * 0.05;\n            dialogGroup.position.y = 4.5 + Math.sin(time * 0.7) * 0.1;\n          }\n        });\n        \n        // 让对话框面向相机\n        dialogGroup.lookAt(camera.position);\n      }\n      \n      // 管理对话的显示时间\n      if (showDialog) {\n        dialogTimer += deltaTime;\n        // 对话显示时间结束后，继续移动\n        if (dialogTimer > dialogDuration) {\n          // 添加淡出效果\n          if (dialogGroup.visible) {\n            const opacityAnimation = (/* _time: number */) => {\n              if (bubble.material.opacity > 0) {\n                bubble.material.opacity -= 0.01;\n                if (bubble.material.opacity <= 0) {\n                  dialogGroup.visible = false;\n                  // 移除这个动画函数\n                  const index = scene.userData.animateFunctions.indexOf(opacityAnimation);\n                  if (index > -1) {\n                    scene.userData.animateFunctions.splice(index, 1);\n                  }\n                }\n              }\n            };\n            scene.userData.animateFunctions.push(opacityAnimation);\n          }\n        }\n        \n        // 让对话框总是面向相机\n        dialogGroup.lookAt(camera.position);\n      }\n      \n      // 使用曲线获取当前位置\n      const currentPos = curve.getPointAt(personPathProgress);\n      // 获取路径切线方向，用于设置人物朝向\n      const tangent = curve.getTangentAt(personPathProgress);\n      \n      // 设置人物位置，稍微错开一些\n      person1.position.set(\n        currentPos.x - tangent.z * 0.5, \n        0, \n        currentPos.z + tangent.x * 0.5\n      );\n      person2.position.set(\n        currentPos.x + tangent.z * 0.5, \n        0, \n        currentPos.z - tangent.x * 0.5\n      );\n      \n      // 根据路径方向设置人物朝向\n      person1.rotation.y = Math.atan2(tangent.x, tangent.z);\n      person2.rotation.y = Math.atan2(tangent.x, tangent.z);\n      \n      // 实现手臂挥动动画\n      if (!fuzhouReached) {\n        // 只有在行走时才挥动手臂\n        const leftArmIndex = 4; // 根据创建顺序，左手臂应该是第5个子对象\n        const rightArmIndex = 5; // 右手臂是第6个子对象\n        \n        if (person1.children[leftArmIndex] && person1.children[rightArmIndex]) {\n          // 左右手臂相反方向摆动\n          person1.children[leftArmIndex].rotation.x = Math.sin(elapsedTime * 3) * 0.5;\n          person1.children[rightArmIndex].rotation.x = -Math.sin(elapsedTime * 3) * 0.5;\n        }\n        \n        if (person2.children[leftArmIndex] && person2.children[rightArmIndex]) {\n          // 第二个人物的手臂动作稍微错开\n          person2.children[leftArmIndex].rotation.x = Math.sin(elapsedTime * 3 + 0.5) * 0.5;\n          person2.children[rightArmIndex].rotation.x = -Math.sin(elapsedTime * 3 + 0.5) * 0.5;\n        }\n        \n        // 添加腿部动画模拟走路\n        const leftLegIndex = 2; // 左腿是第3个子对象\n        const rightLegIndex = 3; // 右腿是第4个子对象\n        \n        if (person1.children[leftLegIndex] && person1.children[rightLegIndex]) {\n          person1.children[leftLegIndex].rotation.z = Math.sin(elapsedTime * 3) * 0.3;\n          person1.children[rightLegIndex].rotation.z = -Math.sin(elapsedTime * 3) * 0.3;\n        }\n        \n        if (person2.children[leftLegIndex] && person2.children[rightLegIndex]) {\n          person2.children[leftLegIndex].rotation.z = Math.sin(elapsedTime * 3 + 0.5) * 0.3;\n          person2.children[rightLegIndex].rotation.z = -Math.sin(elapsedTime * 3 + 0.5) * 0.3;\n        }\n        \n        // 添加手臂动画，与腿部相反方向摆动\n        if (person1.children[leftArmIndex] && person1.children[rightArmIndex]) {\n          person1.children[leftArmIndex].rotation.z = -Math.sin(elapsedTime * 3) * 0.25;\n          person1.children[rightArmIndex].rotation.z = Math.sin(elapsedTime * 3) * 0.25;\n        }\n        \n        if (person2.children[leftArmIndex] && person2.children[rightArmIndex]) {\n          person2.children[leftArmIndex].rotation.z = -Math.sin(elapsedTime * 3 + 0.5) * 0.25;\n          person2.children[rightArmIndex].rotation.z = Math.sin(elapsedTime * 3 + 0.5) * 0.25;\n        }\n      } else {\n        // 到达目的地后，可以做一些特殊的挥手动作\n        const leftArmIndex = 4;\n        const rightArmIndex = 5;\n        \n        if (person1.children[rightArmIndex]) {\n          // 右手上下挥动打招呼\n          person1.children[rightArmIndex].rotation.x = 0;\n          person1.children[rightArmIndex].rotation.z = -Math.PI / 4 + Math.sin(elapsedTime * 2) * 0.5;\n        }\n        \n        if (person2.children[leftArmIndex]) {\n          // 左手上下挥动打招呼\n          person2.children[leftArmIndex].rotation.x = 0;\n          person2.children[leftArmIndex].rotation.z = Math.PI / 4 + Math.sin(elapsedTime * 2 + 0.8) * 0.5;\n        }\n      }\n      \n      // 调整人物透明度，创造若隐若现效果\n      person1.children.forEach(mesh => {\n        if (mesh instanceof THREE.Mesh && mesh.material instanceof THREE.MeshBasicMaterial) {\n          mesh.material.opacity = 0.4 + Math.sin(elapsedTime * 0.5) * 0.2;\n        }\n      });\n      \n      person2.children.forEach(mesh => {\n        if (mesh instanceof THREE.Mesh && mesh.material instanceof THREE.MeshBasicMaterial) {\n          mesh.material.opacity = 0.4 + Math.sin(elapsedTime * 0.5 + Math.PI) * 0.2;\n        }\n      });\n      \n      // 小鹿的动画\n      deers.forEach((deer, index) => {\n        deer.rotation.y = Math.sin(elapsedTime * 0.2 + index) * 0.2;\n        // 小鹿轻微点头动作\n        if (deer.children[1]) { // 头部\n          deer.children[1].rotation.x = Math.sin(elapsedTime * 0.6 + index) * 0.1;\n        }\n      });\n      \n      // 蝴蝶动画\n      butterflies.forEach((butterfly, index) => {\n        // 翅膀扇动\n        const wingSpeed = 5 + Math.sin(index) * 2;\n        const wingAngle = Math.sin(elapsedTime * wingSpeed) * 0.5;\n        \n        if (butterfly.children[1]) { // 左翅膀\n          butterfly.children[1].rotation.z = wingAngle;\n        }\n        if (butterfly.children[2]) { // 右翅膀\n          butterfly.children[2].rotation.z = -wingAngle;\n        }\n        \n        // 飞行路径 - 使用李萨如曲线\n        const a = 2 + index % 3;\n        const b = 3 + index % 2;\n        const t = elapsedTime * 0.3;\n        \n        butterfly.position.y = 1.5 + Math.sin(t * a + index) * 0.5;\n        butterfly.position.x += Math.sin(t * a + index) * 0.01;\n        butterfly.position.z += Math.cos(t * b + index) * 0.01;\n      });\n      \n      // 兔子动画\n      rabbits.forEach((rabbit, index) => {\n        // 耳朵轻微摆动\n        if (rabbit.children[2] && rabbit.children[3]) { // 耳朵\n          rabbit.children[2].rotation.x = -Math.PI/12 + Math.sin(elapsedTime * 1.5 + index) * 0.05;\n          rabbit.children[3].rotation.x = Math.PI/12 + Math.sin(elapsedTime * 1.5 + index + Math.PI) * 0.05;\n        }\n        \n        // 偶尔跳动\n        if (Math.sin(elapsedTime * 0.2 + index * 5) > 0.97) {\n          rabbit.position.y = Math.sin((elapsedTime + index) * 5) * 0.1;\n        } else {\n          rabbit.position.y = 0;\n        }\n      });\n      \n      // 执行所有自定义动画函数\n      if (scene.userData.animateFunctions) {\n        scene.userData.animateFunctions.forEach((animateFunc: (time: number) => void) => {\n          animateFunc(elapsedTime);\n        });\n      }\n      \n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    \n    animate();\n    \n    // 响应窗口大小变化\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    \n    window.addEventListener('resize', handleResize);\n    \n    // 在最开始添加自然景观\n    // 创建远处的高山、海洋、太阳等元素\n    const createLandscape = () => {\n      const group = new THREE.Group();\n      \n      // 创建远处的山脉\n      const createMountainRange = (xOffset: number, zOffset: number, side: string) => {\n        const mountainGroup = new THREE.Group();\n        \n        // 山脉的颜色从远到近渐变\n        const mountainColors = [\n          0x2c3e50, // 深蓝灰色\n          0x34495e, // 深蓝色\n          0x4b6584, // 中等蓝灰色\n          0x5c739c, // 浅蓝灰色\n        ];\n        \n        // 在一定范围内随机创建多座山峰\n        const mountainCount = 8;\n        for (let i = 0; i < mountainCount; i++) {\n          const height = 15 + Math.random() * 25; // 高度变化\n          const radius = 10 + Math.random() * 15; // 底部半径变化\n          const segments = 6 + Math.floor(Math.random() * 6); // 分段数\n          \n          const mountainGeometry = new THREE.ConeGeometry(radius, height, segments);\n          const mountainMaterial = new THREE.MeshStandardMaterial({\n            color: mountainColors[Math.floor(Math.random() * mountainColors.length)],\n            flatShading: true,\n            roughness: 0.9,\n          });\n          \n          const mountain = new THREE.Mesh(mountainGeometry, mountainMaterial);\n          \n          // 计算山峰的位置\n          // 在指定的一侧创建山脉\n          const xPos = side === 'left' ? \n            -80 - Math.random() * 60 + xOffset : \n            80 + Math.random() * 60 + xOffset;\n          \n          const zPos = -100 - Math.random() * 150 + zOffset;\n          mountain.position.set(xPos, height / 2 - 5, zPos);\n          \n          // 稍微随机旋转山体，使看起来更自然\n          mountain.rotation.y = Math.random() * Math.PI;\n          \n          mountainGroup.add(mountain);\n        }\n        \n        // 给远处的山添加雪顶\n        const snowPeaks = 3; // 雪顶山峰的数量\n        for (let i = 0; i < snowPeaks; i++) {\n          const height = 28 + Math.random() * 12;\n          const radius = 12 + Math.random() * 8;\n          \n          // 山体\n          const mountainGeometry = new THREE.ConeGeometry(radius, height, 8);\n          const mountainMaterial = new THREE.MeshStandardMaterial({\n            color: 0x4b6584,\n            flatShading: true,\n            roughness: 0.8,\n          });\n          \n          const mountain = new THREE.Mesh(mountainGeometry, mountainMaterial);\n          \n          // 雪顶\n          const snowCapGeometry = new THREE.ConeGeometry(radius * 0.8, height * 0.3, 8);\n          const snowMaterial = new THREE.MeshStandardMaterial({\n            color: 0xffffff,\n            flatShading: true,\n            roughness: 0.6,\n          });\n          \n          const snowCap = new THREE.Mesh(snowCapGeometry, snowMaterial);\n          snowCap.position.y = height * 0.4;\n          \n          mountain.add(snowCap);\n          \n          // 位置比其他山脉更远\n          const xPos = side === 'left' ? \n            -130 - Math.random() * 40 + xOffset : \n            130 + Math.random() * 40 + xOffset;\n          \n          const zPos = -180 - Math.random() * 100 + zOffset;\n          mountain.position.set(xPos, height / 2 - 5, zPos);\n          \n          mountainGroup.add(mountain);\n        }\n        \n        return mountainGroup;\n      };\n      \n      // 创建左侧山脉\n      const leftMountains = createMountainRange(-30, 0, 'left');\n      group.add(leftMountains);\n      \n      // 创建右侧山脉\n      const rightMountains = createMountainRange(30, -50, 'right');\n      group.add(rightMountains);\n      \n      // 创建太阳\n      const sunGeometry = new THREE.SphereGeometry(15, 32, 32);\n      const sunMaterial = new THREE.MeshBasicMaterial({\n        color: 0xffcc66,\n        transparent: true,\n        opacity: 0.8,\n      });\n      const sun = new THREE.Mesh(sunGeometry, sunMaterial);\n      sun.position.set(120, 60, -200);\n      \n      // 添加太阳光晕\n      const sunGlowGeometry = new THREE.SphereGeometry(25, 32, 32);\n      const sunGlowMaterial = new THREE.MeshBasicMaterial({\n        color: 0xffcc66,\n        transparent: true,\n        opacity: 0.3,\n      });\n      const sunGlow = new THREE.Mesh(sunGlowGeometry, sunGlowMaterial);\n      sun.add(sunGlow);\n      \n      // 太阳光源\n      const sunLight = new THREE.PointLight(0xffffff, 1, 300);\n      sunLight.position.set(0, 0, 0);\n      sun.add(sunLight);\n      \n      group.add(sun);\n      \n      // 创建远处的大河\n      const riverWidth = 40;\n      const riverLength = 400;\n      const riverGeometry = new THREE.PlaneGeometry(riverWidth, riverLength, 20, 40);\n      \n      // 给河流水面添加波浪效果\n      const riverPositions = riverGeometry.attributes.position.array as Float32Array;\n      for (let i = 0; i < riverPositions.length; i += 3) {\n        const x = riverPositions[i];\n        const z = riverPositions[i + 1];\n        // 添加微小的高度变化模拟波浪\n        riverPositions[i + 2] = Math.sin(x * 0.5) * 0.5 + Math.cos(z * 0.3) * 0.3;\n      }\n      \n      const riverMaterial = new THREE.MeshStandardMaterial({\n        color: dreamyBlue.light,\n        transparent: true,\n        opacity: 0.8,\n        metalness: 0.3,\n        roughness: 0.2,\n      });\n      \n      const river = new THREE.Mesh(riverGeometry, riverMaterial);\n      river.rotation.x = -Math.PI / 2; // 平躺\n      river.position.set(-60, 0.2, -100); // 放在左侧山脉中\n      group.add(river);\n      \n      // 创建右侧的海滩和海洋\n      const beachGeometry = new THREE.PlaneGeometry(100, 200, 30, 30);\n      const beachMaterial = new THREE.MeshStandardMaterial({\n        color: 0xf5e1b3, // 沙滩颜色\n        roughness: 0.9,\n      });\n      \n      const beach = new THREE.Mesh(beachGeometry, beachMaterial);\n      beach.rotation.x = -Math.PI / 2;\n      beach.position.set(80, 0.1, -50);\n      group.add(beach);\n      \n      // 创建海面\n      const seaGeometry = new THREE.PlaneGeometry(200, 300, 50, 50);\n      \n      // 给海面添加波浪效果\n      const seaPositions = seaGeometry.attributes.position.array as Float32Array;\n      for (let i = 0; i < seaPositions.length; i += 3) {\n        const x = seaPositions[i];\n        const z = seaPositions[i + 1];\n        // 海浪效果更明显\n        seaPositions[i + 2] = Math.sin(x * 0.2 + z * 0.1) * 1.2;\n      }\n      \n      const seaMaterial = new THREE.MeshStandardMaterial({\n        color: 0x4b9cd3, // 海水蓝色\n        transparent: true,\n        opacity: 0.85,\n        metalness: 0.4,\n        roughness: 0.15,\n      });\n      \n      const sea = new THREE.Mesh(seaGeometry, seaMaterial);\n      sea.rotation.x = -Math.PI / 2;\n      sea.position.set(150, 0.3, -100);\n      group.add(sea);\n      \n      // 添加一些小岛\n      const islandCount = 3;\n      for (let i = 0; i < islandCount; i++) {\n        const islandGeometry = new THREE.ConeGeometry(5 + Math.random() * 3, 3 + Math.random() * 2, 5);\n        const islandMaterial = new THREE.MeshStandardMaterial({\n          color: 0xc1b396, // 岛屿颜色\n          roughness: 0.8,\n        });\n        \n        const island = new THREE.Mesh(islandGeometry, islandMaterial);\n        \n        // 随机位置，靠近海中央\n        const xPos = 130 + Math.random() * 60;\n        const zPos = -60 - Math.random() * 120;\n        island.position.set(xPos, 0, zPos);\n        island.rotation.x = Math.PI / 2; // 使圆锥底朝上\n        \n        // 添加植被（简单椰子树）\n        const palmCount = 1 + Math.floor(Math.random() * 3);\n        for (let j = 0; j < palmCount; j++) {\n          const trunkGeometry = new THREE.CylinderGeometry(0.3, 0.5, 4, 6);\n          const trunkMaterial = new THREE.MeshStandardMaterial({\n            color: 0x8b5a2b, // 棕色\n            roughness: 0.8,\n          });\n          \n          const trunk = new THREE.Mesh(trunkGeometry, trunkMaterial);\n          \n          // 随机位置，岛上的树\n          const treeX = Math.random() * 3 - 1.5;\n          const treeZ = Math.random() * 3 - 1.5;\n          const angle = Math.random() * Math.PI * 0.25; // 轻微倾斜\n          \n          trunk.position.set(treeX, 2, treeZ);\n          trunk.rotation.x = -Math.PI / 2; // 调整方向\n          trunk.rotation.z = angle; // 轻微倾斜\n          \n          // 添加树叶\n          const leafCount = 5 + Math.floor(Math.random() * 4);\n          for (let k = 0; k < leafCount; k++) {\n            const leafGeometry = new THREE.PlaneGeometry(2, 3);\n            const leafMaterial = new THREE.MeshStandardMaterial({\n              color: 0x2e8b57, // 绿色\n              side: THREE.DoubleSide,\n              transparent: true,\n              opacity: 0.9,\n            });\n            \n            const leaf = new THREE.Mesh(leafGeometry, leafMaterial);\n            const leafAngle = (k / leafCount) * Math.PI * 2;\n            leaf.rotation.set(Math.PI / 4, leafAngle, 0);\n            leaf.position.y = 2;\n            \n            trunk.add(leaf);\n          }\n          \n          island.add(trunk);\n        }\n        \n        group.add(island);\n      }\n      \n      // 添加一些低矮的云\n      const cloudCount = 12;\n      for (let i = 0; i < cloudCount; i++) {\n        const cloudGroup = new THREE.Group();\n        \n        // 云朵由多个球体组成\n        const puffCount = 3 + Math.floor(Math.random() * 4);\n        for (let j = 0; j < puffCount; j++) {\n          const radius = 3 + Math.random() * 5;\n          const puffGeometry = new THREE.SphereGeometry(radius, 7, 7);\n          const puffMaterial = new THREE.MeshStandardMaterial({\n            color: 0xffffff,\n            transparent: true,\n            opacity: 0.9 - Math.random() * 0.3,\n            roughness: 0.2,\n          });\n          \n          const puff = new THREE.Mesh(puffGeometry, puffMaterial);\n          \n          // 水平排列组成一朵云\n          const puffX = j * (radius * 1.2) - (puffCount * radius * 0.6) / 2;\n          const puffY = Math.random() * radius * 0.5;\n          const puffZ = Math.random() * radius * 0.5;\n          \n          puff.position.set(puffX, puffY, puffZ);\n          cloudGroup.add(puff);\n        }\n        \n        // 云的随机位置\n        const side = Math.random() > 0.5 ? 1 : -1; // 左侧或右侧\n        const xPos = side * (50 + Math.random() * 100);\n        const yPos = 40 + Math.random() * 30;\n        const zPos = -80 - Math.random() * 200;\n        \n        cloudGroup.position.set(xPos, yPos, zPos);\n        group.add(cloudGroup);\n      }\n      \n      return group;\n    };\n    \n    // 添加自然景观到场景中\n    const landscape = createLandscape();\n    scene.add(landscape);\n    \n    // 为日出/日落和水面波动添加动画\n    const animateLandscape = (elapsedTime: number) => {\n      // 找到太阳对象(假设它是landscape中第3个子对象)\n      const sun = landscape.children[2] as THREE.Mesh;\n      if (sun && sun.material instanceof THREE.MeshBasicMaterial) {\n        // 太阳缓慢脉动效果\n        const sunScale = 1 + Math.sin(elapsedTime * 0.2) * 0.05;\n        sun.scale.set(sunScale, sunScale, sunScale);\n        \n        // 轻微上下浮动\n        sun.position.y = 60 + Math.sin(elapsedTime * 0.1) * 2;\n        \n        // 根据人物路径进度变化太阳颜色和位置\n        // 颜色变化：红 -> 黄 -> 白 -> 灰 -> 黑\n        const sunColors = [\n          new THREE.Color(0xff2200), // 红色\n          new THREE.Color(0xff8800), // 橙色\n          new THREE.Color(0xffcc66), // 黄色\n          new THREE.Color(0xffffff), // 白色\n          new THREE.Color(0xaaaaaa), // 浅灰色\n          new THREE.Color(0x555555), // 深灰色\n          new THREE.Color(0x111111)  // 接近黑色\n        ];\n        \n        // 使用人物的路径进度来插值颜色\n        const colorIndex = Math.min(\n          Math.floor(personPathProgress * sunColors.length),\n          sunColors.length - 2\n        );\n        const nextColorIndex = colorIndex + 1;\n        const colorProgress = (personPathProgress * sunColors.length) % 1;\n        \n        // 在两个颜色之间插值\n        const currentColor = new THREE.Color().copy(sunColors[colorIndex]).lerp(\n          sunColors[nextColorIndex], \n          colorProgress\n        );\n        \n        // 设置太阳颜色\n        sun.material.color = currentColor;\n        \n        // 太阳位置也随着人物移动而变化 - 从右向左移动\n        const startX = 120;\n        const endX = -120;\n        sun.position.x = startX + (endX - startX) * personPathProgress;\n        \n        // 太阳高度也变化 - 开始高，然后下降，最后略微升高（模拟日出日落）\n        const heightCurve = Math.sin(personPathProgress * Math.PI);\n        sun.position.y = 20 + heightCurve * 60;\n        \n        // 太阳光晕闪烁和颜色同步\n        if (sun.children[0] && sun.children[0] instanceof THREE.Mesh && \n            sun.children[0].material instanceof THREE.MeshBasicMaterial) {\n          const glow = sun.children[0] as THREE.Mesh;\n          glow.scale.set(\n            1 + Math.sin(elapsedTime * 0.5) * 0.1, \n            1 + Math.sin(elapsedTime * 0.5) * 0.1, \n            1 + Math.sin(elapsedTime * 0.5) * 0.1\n          );\n          // 光晕颜色也要改变，但透明度保持低\n          (glow.material as THREE.MeshBasicMaterial).color = currentColor;\n        }\n        \n        // 调整太阳光强度和颜色\n        if (sun.children[1] && sun.children[1] instanceof THREE.PointLight) {\n          const light = sun.children[1] as THREE.PointLight;\n          // 光照强度随日夜变化（越暗强度越低）\n          light.intensity = 1.5 * (1 - personPathProgress * 0.8) + Math.sin(elapsedTime * 0.3) * 0.1;\n          // 光照颜色也要随太阳变化\n          light.color = currentColor;\n        }\n      }\n      \n      // 根据太阳位置（时间）调整整体场景氛围\n      // 随着太阳从红变黑，场景也从亮变暗\n      const ambientLightIntensity = 0.5 * (1 - personPathProgress * 0.7);\n      ambientLight.intensity = ambientLightIntensity;\n      \n      // 调整雾的颜色，随太阳变化\n      if (scene.fog instanceof THREE.Fog) {\n        const dayFogColor = new THREE.Color(dreamyBlue.dark);\n        const nightFogColor = new THREE.Color(0x000814);\n        scene.fog.color.copy(dayFogColor).lerp(nightFogColor, personPathProgress);\n      }\n      \n      // 河流波动\n      const river = landscape.children[3] as THREE.Mesh;\n      if (river && river.geometry instanceof THREE.PlaneGeometry) {\n        const riverPositions = river.geometry.attributes.position.array as Float32Array;\n        for (let i = 0; i < riverPositions.length; i += 3) {\n          riverPositions[i + 2] = Math.sin(elapsedTime * 0.5 + riverPositions[i] * 0.03 + riverPositions[i + 1] * 0.05) * 0.5;\n        }\n        river.geometry.attributes.position.needsUpdate = true;\n      }\n      \n      // 海洋波浪\n      const sea = landscape.children[5] as THREE.Mesh;\n      if (sea && sea.geometry instanceof THREE.PlaneGeometry) {\n        const seaPositions = sea.geometry.attributes.position.array as Float32Array;\n        for (let i = 0; i < seaPositions.length; i += 3) {\n          seaPositions[i + 2] = Math.sin(elapsedTime * 0.3 + seaPositions[i] * 0.05) * 0.8 + \n                            Math.cos(elapsedTime * 0.4 + seaPositions[i + 1] * 0.06) * 0.8;\n        }\n        sea.geometry.attributes.position.needsUpdate = true;\n      }\n      \n      // 云朵漂浮\n      for (let i = 6 + 3; i < landscape.children.length; i++) { // 跳过岛屿等其他对象\n        const cloud = landscape.children[i];\n        cloud.position.x += Math.sin(elapsedTime * 0.1 + i) * 0.03; // 横向漂浮\n        cloud.position.y += Math.sin(elapsedTime * 0.05 + i * 0.5) * 0.01; // 轻微上下浮动\n      }\n    };\n    \n    // 添加到动画循环\n    scene.userData.animateFunctions = scene.userData.animateFunctions || [];\n    scene.userData.animateFunctions.push(animateLandscape);\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (currentCanvas) {\n        // Use currentCanvas instead of canvasRef.current\n        renderer.dispose();\n        scene.clear();\n      }\n    };\n  }, []);\n\n  // 处理音乐播放\n  const toggleMusic = () => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    \n    if (audio.paused) {\n      const playPromise = audio.play();\n      if (playPromise !== undefined) {\n        playPromise.then(() => {\n          setAudioPlaying(true);\n        }).catch(err => {\n          console.log(\"Could not play audio:\", err);\n        });\n      }\n    } else {\n      audio.pause();\n      setAudioPlaying(false);\n    }\n  };\n\n  // 处理\"进入我们的世界\"按钮点击\n  const handleEnterClick = () => {\n    // 直接跳转到世界页面，不显示烟花\n    router.push('/world');\n    \n    // 如果音频文件存在，则尝试播放\n    const audio = audioRef.current;\n    if (audio) {\n      audio.play().catch(err => {\n        console.log(\"Audio play was prevented:\", err);\n      });\n      setAudioPlaying(true);\n    }\n  };\n\n  // 在组件挂载时创建音频元素\n  useEffect(() => {\n    // 检查audioRef是否已经有值\n    if (!audioRef.current) {\n      const audioElement = new Audio(\"/music/M500000vyP282Pn71W.mp3\");\n      audioElement.loop = true;\n      \n      // 设置预加载\n      audioElement.preload = \"auto\";\n      \n      // 设置加载事件\n      audioElement.addEventListener('loadeddata', () => {\n        console.log(\"音频已加载\");\n        setAudioLoaded(true);\n        \n        // 尝试自动播放\n        try {\n          const playPromise = audioElement.play();\n          if (playPromise !== undefined) {\n            playPromise.then(() => {\n              console.log(\"音频自动播放成功\");\n              setAudioPlaying(true);\n            }).catch(err => {\n              console.log(\"音频自动播放被阻止:\", err);\n            });\n          }\n        } catch (e) {\n          console.log(\"音频播放出错:\", e);\n        }\n      });\n      \n      audioRef.current = audioElement;\n    }\n    \n    // 组件卸载时处理音频\n    return () => {\n      const audioElement = audioRef.current;\n      if (audioElement) {\n        audioElement.pause();\n        audioElement.src = \"\";\n      }\n    };\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <canvas ref={canvasRef} className={styles.canvas} />\n\n      <div className={styles.overlay}>\n        <h1 className={styles.title}>遇见 Destin</h1>\n        <p className={styles.subtitle}>Lumière d&apos;Étoiles</p>\n        \n        <div className={styles.buttons}>\n          <button className={styles.enterBtn} onClick={handleEnterClick}>\n            进入我的世界\n          </button>\n          \n          {audioLoaded && (\n            <button \n              className={`${styles.musicBtn} ${audioPlaying ? styles.playing : ''}`}\n              onClick={toggleMusic}\n            >\n              {audioPlaying ? '暂停音乐' : '播放音乐'}\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}